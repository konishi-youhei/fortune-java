/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-05-08 08:54:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("  <title>おみくじ課題</title>\n");
      out.write("  <link rel=\"stylesheet\" href=\"style.css\">\n");
      out.write("  <style>\n");
      out.write("    body{\n");
      out.write("      width: 600px;\n");
      out.write("      margin: 0 auto;\n");
      out.write("    }\n");
      out.write("    h1{\n");
      out.write("    margin-top: 150px;\n");
      out.write("    margin-bottom: 50px;\n");
      out.write("    }\n");
      out.write("    .post{\n");
      out.write("      border: 1px solid black;\n");
      out.write("      border-radius: 10px;\n");
      out.write("      padding: 30px;\n");
      out.write("      overflow: hidden;\n");
      out.write("    }\n");
      out.write("    input[type='text'] {\n");
      out.write("      box-sizing: border-box;\n");
      out.write("      width: 100%;\n");
      out.write("      padding: 0.3em;\n");
      out.write("      letter-spacing: 1px;\n");
      out.write("      border: 1;\n");
      out.write("      margin: 10px 0;\n");
      out.write("      font-size: 20px;\n");
      out.write("    }\n");
      out.write("    select {\n");
      out.write("      box-sizing: border-box;\n");
      out.write("      width: 100%;\n");
      out.write("      height: 40px;\n");
      out.write("      padding: 10px;\n");
      out.write("      border: 1;\n");
      out.write("      margin: 10px 0;\n");
      out.write("      font-size: 20px;\n");
      out.write("    }\n");
      out.write("    input[type='submit'] {\n");
      out.write("      float: right;\n");
      out.write("      margin-top: 10px;\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <h1>おみくじ内容を追加する</h1>\n");
      out.write("  <form method=\"post\" action=\"add\" class=\"post\">\n");
      out.write("    <label>追加する時間帯\n");
      out.write("      <select name=\"timezone\">\n");
      out.write("        <option value=\"1\">朝</option>\n");
      out.write("        <option value=\"2\">昼</option>\n");
      out.write("        <option value=\"3\">夜</option>\n");
      out.write("        <option value=\"4\">夕方</option>\n");
      out.write("      </select>\n");
      out.write("    </label><br>\n");
      out.write("    <label>\n");
      out.write("      おみくじ結果<input type=\"text\" name=\"fortune\">\n");
      out.write("    </label><br>\n");
      out.write("    <label>\n");
      out.write("      ひとこと<input type=\"text\" name=\"word\">\n");
      out.write("    </label><br>\n");
      out.write("    <label>画像\n");
      out.write("      <select name=\"img\">\n");
      out.write("        <option value=\"images/恋大吉.png\">恋みくじ　大吉</option>\n");
      out.write("        <option value=\"images/恋吉.png\">恋みくじ　吉</option>\n");
      out.write("        <option value=\"images/恋凶.png\">恋みくじ　凶</option>\n");
      out.write("        <option value=\"images/恋大凶.png\">恋みくじ　大凶</option>\n");
      out.write("      </select>\n");
      out.write("    </label><br>\n");
      out.write("    <label>\n");
      out.write("      確率<input type=\"text\" name=\"prob\">\n");
      out.write("    </label><br>\n");
      out.write("    <input type=\"submit\" value=\"送信\">\n");
      out.write("  </form>\n");
      out.write("  <form method=\"post\" action=\"edit\" id=\"pushBtn\">\n");
      out.write("    <input type=\"submit\" value=\"戻る\">\n");
      out.write("    <input type=\"hidden\" name=\"mode\" value=\"link\">\n");
      out.write("  </form>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
